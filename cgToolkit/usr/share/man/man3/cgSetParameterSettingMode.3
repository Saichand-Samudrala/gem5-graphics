.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.IX Title "cgSetParameterSettingMode 3"
.TH cgSetParameterSettingMode 3 "Cg Toolkit 3.0" "perl v5.10.0" "Cg Core Runtime API"
.if n .ad l
.nh
.SH "NAME"
\&\fBcgSetParameterSettingMode\fR \- set the parameter setting mode for a context
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  #include <Cg/cg.h>
\&
\&  void cgSetParameterSettingMode( CGcontext context,
\&                                  CGenum parameterSettingMode );
.Ve
.SH "PARAMETERS"
.IX Header "PARAMETERS"
.IP "context" 8
.IX Item "context"
The context in which to set the parameter setting mode.
.IP "parameterSettingMode" 8
.IX Item "parameterSettingMode"
The mode to which \fBcontext\fR will be set.  Must be one of the following :
.RS 8
.IP "\(bu" 4
\&\fB\s-1CG_IMMEDIATE_PARAMETER_SETTING\s0\fR
.IP "\(bu" 4
\&\fB\s-1CG_DEFERRED_PARAMETER_SETTING\s0\fR
.RE
.RS 8
.RE
.SH "RETURN VALUES"
.IX Header "RETURN VALUES"
None.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBcgSetParameterSettingMode\fR controls the behavior of the context when setting
parameters.  With deferred parameter setting, the corresponding 3D \s-1API\s0
parameter is not immediately updated by cgSetParameter commands. 
If the application does not need to access these 3D \s-1API\s0 parameter values,
then this mode allows improved performance by avoiding unnecessary 3D \s-1API\s0 calls.
.PP
Parameters of variability \fB\s-1CG_VARYING\s0\fR are never deferred.
.PP
When the parameter setting mode is \fB\s-1CG_DEFERRED_PARAMETER_SETTING\s0\fR,
non-erroneous cgSetParameter commands record the updated parameter value
but do not immediately update the corresponding 3D \s-1API\s0 parameter.  Instead
the parameter is marked internally as \fIupdate deferred\fR.  The 3D \s-1API\s0 commands
required to update any program parameters marked \fIupdate deferred\fR are
performed as part of the next program bind (see cgGLBindProgram,
cgD3D9BindProgram, or cgD3D8BindProgram).
.PP
If a context's parameter setting mode was \fB\s-1CG_DEFERRED_PARAMETER_SETTING\s0\fR
and one or more parameters are marked \fIupdate deferred\fR, changing the parameter
setting mode to \fB\s-1CG_IMMEDIATE_PARAMETER_SETTING\s0\fR does not cause parameters
marked \fIupdate deferred\fR to be updated.  The application can use
cgUpdateProgramParameters or
cgUpdatePassParameters to force the updating
of parameters marked \fIupdate deferred\fR.
.PP
\&\fBparameterSettingMode\fR must be one of the following enumerants :
.IP "\(bu" 4
\&\fB\s-1CG_IMMEDIATE_PARAMETER_SETTING\s0\fR
.Sp
Non-erroneous cgSetParameter commands immediately update the corresponding
3D \s-1API\s0 parameter.  This is the default mode.
.IP "\(bu" 4
\&\fB\s-1CG_DEFERRED_PARAMETER_SETTING\s0\fR
.Sp
Non-erroneous cgSetParameter commands record the updated parameter
value but do not immediately update the corresponding 3D \s-1API\s0 parameter.
These updates will happen during the next program bind.  The updates can
be explicitly forced to occur by using
cgUpdateProgramParameters or
cgUpdatePassParameters.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
Change context to use deferred parameter updates:
.PP
.Vb 1
\&  cgSetParameterSettingMode(myCgContext, CG_DEFERRED_PARAMETER_SETTING);
.Ve
.PP
Change context to its initial behavior of performing parameter updates immediately:
.PP
.Vb 1
\&  cgSetParameterSettingMode(myCgContext, CG_IMMEDIATE_PARAMETER_SETTING);
.Ve
.SH "ERRORS"
.IX Header "ERRORS"
\&\fB\s-1CG_INVALID_CONTEXT_HANDLE_ERROR\s0\fR is generated if \fBcontext\fR is not a valid context.
.PP
\&\fB\s-1CG_INVALID_ENUMERANT_ERROR\s0\fR is generated if \fBparameterSettingMode\fR is not
\&\fB\s-1CG_IMMEDIATE_PARAMETER_SETTING\s0\fR or \fB\s-1CG_DEFERRED_PARAMETER_SETTING\s0\fR.
.SH "HISTORY"
.IX Header "HISTORY"
\&\fBcgSetParameterSettingMode\fR was introduced in Cg 2.0.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
cgGetParameterSettingMode,
cgUpdateProgramParameters,
cgUpdatePassParameters,
cgSetParameter,
cgSetParameterVariability,
cgGetParameterVariability,
cgGLBindProgram,
cgD3D9BindProgram,
cgD3D8BindProgram

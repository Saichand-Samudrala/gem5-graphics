.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.IX Title "cgGLSetMatrixParameterArray 3"
.TH cgGLSetMatrixParameterArray 3 "Cg Toolkit 3.0" "perl v5.10.0" "Cg OpenGL Runtime API"
.if n .ad l
.nh
.SH "NAME"
\&\fBcgGLSetMatrixParameterArray\fR \- set the value of an array matrix parameter
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  #include <Cg/cgGL.h>
\&
\&  /* TYPE is float or double */
\&
\&  void cgGLSetMatrixParameterArray{fd}{rc}( CGparameter param,
\&                                            long offset,
\&                                            long nelements,
\&                                            const TYPE * v );
.Ve
.SH "PARAMETERS"
.IX Header "PARAMETERS"
.IP "param" 8
.IX Item "param"
The matrix array parameter that will be set.
.IP "offset" 8
.IX Item "offset"
An offset into the array parameter at which to start setting elements.
A value of \fB0\fR will begin at the first element of the array.
.IP "nelements" 8
.IX Item "nelements"
The number of elements to set.  A value of \fB0\fR will default to the
total number of elements in the array minus the value of \fBoffset\fR.
.IP "v" 8
.IX Item "v"
The array of values to which to set the parameter.  This must be a contiguous
set of values with size \fBnelements\fR times the number of elements in the matrix.
.SH "RETURN VALUES"
.IX Header "RETURN VALUES"
None.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fBcgGLSetMatrixParameterArray\fR functions set the 
value of a scalar or vector array parameter.
.PP
There are versions of the function that take either \fBfloat\fR or 
\&\fBdouble\fR values signified by \fBf\fR or \fBd\fR in the function name.
.PP
There are versions of the function that assume the array of values are
laid out in either row or column order 
signified by \fBr\fR or \fBc\fR in the function name respectively.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
\&\fIto-be-written\fR
.SH "ERRORS"
.IX Header "ERRORS"
\&\fB\s-1CG_INVALID_PROFILE_ERROR\s0\fR is generated if \fBparam\fR's profile is not
a supported OpenGL profile.
.PP
\&\fB\s-1CG_ARRAY_PARAM_ERROR\s0\fR is generated if \fBparam\fR is not an array parameter.
.PP
\&\fB\s-1CG_NOT_MATRIX_PARAM_ERROR\s0\fR is generated if the elements of \fBparam\fR are
not matrix parameters.
.PP
\&\fB\s-1CG_OUT_OF_ARRAY_BOUNDS_ERROR\s0\fR is generated if \fBoffset\fR or \fBnelements\fR
is outside the bounds of \fBparam\fR.
.PP
\&\fB\s-1CG_INVALID_PARAM_HANDLE_ERROR\s0\fR is generated if \fBparam\fR is not a valid parameter.
.PP
\&\fB\s-1CG_INVALID_PARAMETER_ERROR\s0\fR is generated if the parameter fails to 
set for any other reason.
.SH "HISTORY"
.IX Header "HISTORY"
The \fBcgGLSetMatrixParameterArray\fR functions were introduced in Cg 1.1.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
cgGLSetMatrixParameter,
cgGLGetMatrixParameterArray

.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.IX Title "cgGetFirstParameter 3"
.TH cgGetFirstParameter 3 "Cg Toolkit 3.0" "perl v5.10.0" "Cg Core Runtime API"
.if n .ad l
.nh
.SH "NAME"
\&\fBcgGetFirstParameter\fR \- get the first parameter in a program
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  #include <Cg/cg.h>
\&
\&  CGparameter cgGetFirstParameter( CGprogram program,
\&                                   CGenum name_space );
.Ve
.SH "PARAMETERS"
.IX Header "PARAMETERS"
.IP "program" 12
.IX Item "program"
The program from which to retrieve the first parameter.
.IP "name_space" 12
.IX Item "name_space"
Specifies the parameter namespace through which to iterate.  Currently
\&\fB\s-1CG_PROGRAM\s0\fR and \fB\s-1CG_GLOBAL\s0\fR are supported.
.SH "RETURN VALUES"
.IX Header "RETURN VALUES"
Returns the first \fBCGparameter\fR object in \fBprogram\fR.
.PP
Returns zero if \fBprogram\fR is invalid or if \fBprogram\fR does not have any
parameters.
.PP
Also returns zero if \fBprogram\fR is a combined program.
To access the parameters of a combined program, use
cgGetProgramDomainProgram to get each domain program
and then call \fBcgGetFirstParameter\fR on each domain program.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBcgGetFirstParameter\fR returns the first top-level parameter 
in a program.  \fBcgGetFirstParameter\fR is used for recursing through all parameters in a
program.  See cgGetNextParameter for more information on parameter traversal.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.Vb 6
\&  CGparameter param = cgGetFirstParameter( program, CG_GLOBAL );
\&  while ( param )
\&  {
\&    /* Do stuff with leaf */
\&    param = cgGetNextParameter( param );
\&  }
.Ve
.SH "ERRORS"
.IX Header "ERRORS"
\&\fB\s-1CG_INVALID_PROGRAM_HANDLE_ERROR\s0\fR is generated if \fBprogram\fR
is not a valid program handle.
.PP
\&\fB\s-1CG_INVALID_ENUMERANT_ERROR\s0\fR is generated if \fBname_space\fR is not
\&\fB\s-1CG_PROGRAM\s0\fR or \fB\s-1CG_GLOBAL\s0\fR.
.SH "HISTORY"
.IX Header "HISTORY"
\&\fBcgGetFirstParameter\fR was introduced in Cg 1.1.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
cgGetNextParameter,
cgGetProgramDomainProgram,
cgGetFirstDependentParameter,
cgGetFirstEffectParameter,
cgGetFirstParameterAnnotation

.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.IX Title "cgGetProfileProperty 3"
.TH cgGetProfileProperty 3 "Cg Toolkit 3.0" "perl v5.10.0" "Cg Core Runtime API"
.if n .ad l
.nh
.SH "NAME"
\&\fBcgGetProfileProperty\fR \- query property of a profile
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  #include <Cg/cg.h>
\&
\&  CGbool cgGetProfileProperty( CGprofile profile, CGenum query );
.Ve
.SH "PARAMETERS"
.IX Header "PARAMETERS"
.IP "profile" 8
.IX Item "profile"
The profile to query.
.IP "query" 8
.IX Item "query"
An enumerant describing the property to be queried.
The following enumerants are allowed:
.RS 8
.IP "\(bu" 4
\&\fB\s-1CG_IS_OPENGL_PROFILE\s0\fR
.IP "\(bu" 4
\&\fB\s-1CG_IS_DIRECT3D_PROFILE\s0\fR
.IP "\(bu" 4
\&\fB\s-1CG_IS_DIRECT3D_8_PROFILE\s0\fR
.IP "\(bu" 4
\&\fB\s-1CG_IS_DIRECT3D_9_PROFILE\s0\fR
.IP "\(bu" 4
\&\fB\s-1CG_IS_DIRECT3D_10_PROFILE\s0\fR
.IP "\(bu" 4
\&\fB\s-1CG_IS_DIRECT3D_11_PROFILE\s0\fR
.IP "\(bu" 4
\&\fB\s-1CG_IS_VERTEX_PROFILE\s0\fR
.IP "\(bu" 4
\&\fB\s-1CG_IS_FRAGMENT_PROFILE\s0\fR
.IP "\(bu" 4
\&\fB\s-1CG_IS_GEOMETRY_PROFILE\s0\fR
.IP "\(bu" 4
\&\fB\s-1CG_IS_TESSELLATION_CONTROL_PROFILE\s0\fR
.IP "\(bu" 4
\&\fB\s-1CG_IS_TESSELLATION_EVALUATION_PROFILE\s0\fR
.IP "\(bu" 4
\&\fB\s-1CG_IS_TRANSLATION_PROFILE\s0\fR
.IP "\(bu" 4
\&\fB\s-1CG_IS_HLSL_PROFILE\s0\fR
.IP "\(bu" 4
\&\fB\s-1CG_IS_GLSL_PROFILE\s0\fR
.RE
.RS 8
.RE
.SH "RETURN VALUES"
.IX Header "RETURN VALUES"
Returns \fB\s-1CG_TRUE\s0\fR if \fBprofile\fR holds the property expressed by \fBquery\fR.
.PP
Returns \fB\s-1CG_FALSE\s0\fR otherwise.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBcgGetProfileProperty\fR returns property information about the given profile.
.PP
\&\fBquery\fR must be one of the following enumerants :
.IP "\(bu" 4
\&\fB\s-1CG_IS_OPENGL_PROFILE\s0\fR
.Sp
\&\fBprofile\fR is an OpenGL profile.
.IP "\(bu" 4
\&\fB\s-1CG_IS_DIRECT3D_PROFILE\s0\fR
.Sp
\&\fBprofile\fR is Direct3D profile.
.IP "\(bu" 4
\&\fB\s-1CG_IS_DIRECT3D_8_PROFILE\s0\fR
.Sp
\&\fBprofile\fR is Direct3D8 profile.
.IP "\(bu" 4
\&\fB\s-1CG_IS_DIRECT3D_9_PROFILE\s0\fR
.Sp
\&\fBprofile\fR is Direct3D9 profile.
.IP "\(bu" 4
\&\fB\s-1CG_IS_DIRECT3D_10_PROFILE\s0\fR
.Sp
\&\fBprofile\fR is Direct3D10 profile.
.IP "\(bu" 4
\&\fB\s-1CG_IS_DIRECT3D_11_PROFILE\s0\fR
.Sp
\&\fBprofile\fR is Direct3D11 profile.
.IP "\(bu" 4
\&\fB\s-1CG_IS_VERTEX_PROFILE\s0\fR
.Sp
\&\fBprofile\fR is vertex profile.
.IP "\(bu" 4
\&\fB\s-1CG_IS_FRAGMENT_PROFILE\s0\fR
.Sp
\&\fBprofile\fR is fragment profile.
.IP "\(bu" 4
\&\fB\s-1CG_IS_GEOMETRY_PROFILE\s0\fR
.Sp
\&\fBprofile\fR is geometry profile.
.IP "\(bu" 4
\&\fB\s-1CG_IS_TESSELLATION_CONTROL_PROFILE\s0\fR
.Sp
\&\fBprofile\fR is tessellation control profile.
.IP "\(bu" 4
\&\fB\s-1CG_IS_TESSELLATION_EVALUATION_PROFILE\s0\fR
.Sp
\&\fBprofile\fR is tessellation evaluation profile.
.IP "\(bu" 4
\&\fB\s-1CG_IS_TRANSLATION_PROFILE\s0\fR
.Sp
\&\fBprofile\fR is a translation profile.
.IP "\(bu" 4
\&\fB\s-1CG_IS_HLSL_PROFILE\s0\fR
.Sp
\&\fBprofile\fR is an \s-1HLSL\s0 translation profile.
.IP "\(bu" 4
\&\fB\s-1CG_IS_GLSL_PROFILE\s0\fR
.Sp
\&\fBprofile\fR is a \s-1GLSL\s0 translation profile.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.Vb 3
\&    CGprofile profile;
\&    int nProfiles;
\&    int ii;
\&
\&    nProfiles = cgGetNumSupportedProfiles();
\&    printf("NumSupportedProfiles: %i\en", nProfiles);
\&
\&    for (ii=0; ii<nProfiles; ++ii) {
\&        profile = cgGetSupportedProfile(ii);
\&        if (cgGetProfileProperty(profile, CG_IS_OPENGL_PROFILE)) {
\&            printf("%s is an OpenGL profile\en", cgGetProfileString(profile));
\&        } else {
\&            printf("%s is not an OpenGL profile\en", cgGetProfileString(profile));
\&        }
\&    }
.Ve
.SH "ERRORS"
.IX Header "ERRORS"
\&\fB\s-1CG_INVALID_PARAMETER_ERROR\s0\fR is generated if \fBprofile\fR is not supported
by this version of the Cg library.
.PP
\&\fB\s-1CG_INVALID_ENUMERANT_ERROR\s0\fR is generated if \fBquery\fR is not
\&\fB\s-1CG_IS_OPENGL_PROFILE\s0\fR, \fB\s-1CG_IS_DIRECT3D_PROFILE\s0\fR, \fB\s-1CG_IS_DIRECT3D_8_PROFILE\s0\fR,
\&\fB\s-1CG_IS_DIRECT3D_9_PROFILE\s0\fR, \fB\s-1CG_IS_DIRECT3D_10_PROFILE\s0\fR,
\&\fB\s-1CG_IS_DIRECT3D_11_PROFILE\s0\fR, \fB\s-1CG_IS_VERTEX_PROFILE\s0\fR,
\&\fB\s-1CG_IS_FRAGMENT_PROFILE\s0\fR, \fB\s-1CG_IS_GEOMETRY_PROFILE\s0\fR, \fB\s-1CG_IS_TESSELLATION_CONTROL_PROFILE\s0\fR,
\&\fB\s-1CG_IS_TESSELLATION_EVALUATION_PROFILE\s0\fR, \fB\s-1CG_IS_TRANSLATION_PROFILE\s0\fR,
\&\fB\s-1CG_IS_HLSL_PROFILE\s0\fR, or \fB\s-1CG_IS_GLSL_PROFILE\s0\fR
.SH "HISTORY"
.IX Header "HISTORY"
\&\fBcgGetProfileProperty\fR was introduced in Cg 2.2.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
cgGetNumSupportedProfiles,
cgGetSupportedProfile,
cgIsProfileSupported,
cgGetProfileString,
cgGetProfile

.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.IX Title "cgConnectParameter 3"
.TH cgConnectParameter 3 "Cg Toolkit 3.0" "perl v5.10.0" "Cg Core Runtime API"
.if n .ad l
.nh
.SH "NAME"
\&\fBcgConnectParameter\fR \- connect two parameters
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  #include <Cg/cg.h>
\&
\&  void cgConnectParameter( CGparameter from,
\&                           CGparameter to );
.Ve
.SH "PARAMETERS"
.IX Header "PARAMETERS"
.IP "from" 8
.IX Item "from"
The source parameter.
.IP "to" 8
.IX Item "to"
The destination parameter.
.SH "RETURN VALUES"
.IX Header "RETURN VALUES"
None.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBcgConnectParameter\fR connects a source (from) parameter to a destination 
(to) parameter.  The resulting connection forces the value and variability
of the destination parameter to be identical to the source parameter.
A source parameter may be connected to multiple destination parameters but
there may only be one source parameter per destination parameter.
.PP
\&\fBcgConnectParameter\fR may be used to create an arbitrarily deep tree.
A runtime error will be thrown if a cycle is 
inadvertently  created.  For example, the following code snipped would
generate a \fB\s-1CG_BIND_CREATES_CYCLE_ERROR\s0\fR :
.PP
.Vb 4
\&  CGcontext context = cgCreateContext();
\&  CGparameter Param1 = cgCreateParameter(context, CG_FLOAT);
\&  CGparameter Param2 = cgCreateParameter(context, CG_FLOAT);
\&  CGparameter Param3 = cgCreateParameter(context, CG_FLOAT);
\&
\&  cgConnectParameter(Param1, Param2);
\&  cgConnectParameter(Param2, Param3);
\&  cgConnectParameter(Param3, Param1); /* This will generate the error */
.Ve
.PP
If the source type is a complex type (e.g., struct, or array) the 
topology and member types of both parameters must be identical.  Each 
correlating member parameter will be connected.
.PP
Both parameters must be of the same type unless the source parameter is
a struct type, the destination parameter is an interface type, and the
struct type implements the interface type.   In such a case, a copy of the 
parameter tree under the source parameter will be duplicated, linked to
the orignal tree, and placed under the destination parameter.
.PP
If an array parameter is connected to a resizable array parameter the
destination parameter array will automatically be resized to match the
source array.
.PP
The source parameter may not be a program parameter.  Also the variability
of the parameters may not be \fB\s-1CG_VARYING\s0\fR.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.Vb 4
\&  CGparameter TimeParam1 = cgGetNamedParameter(program1, "time");
\&  CGparameter TimeParam2 = cgGetNamedParameter(program2, "time");
\&  CGparameter SharedTime = cgCreateParameter(context, 
\&                                             cgGetParameterType(TimeParam1));
\&
\&  cgConnectParameter(SharedTime, TimeParam1);
\&  cgConnectParameter(SharedTime, TimeParam2);
\&
\&  cgSetParameter1f(SharedTime, 2.0);
.Ve
.SH "ERRORS"
.IX Header "ERRORS"
\&\fB\s-1CG_INVALID_PARAM_HANDLE_ERROR\s0\fR is generated if either of the 
\&\fBfrom\fR or \fBto\fR parameters are invalid handles.
.PP
\&\fB\s-1CG_PARAMETER_IS_NOT_SHARED_ERROR\s0\fR is generated if the source parameter 
is a program parameter.
.PP
\&\fB\s-1CG_BIND_CREATES_CYCLE_ERROR\s0\fR is generated if the connection will result in 
a cycle.
.PP
\&\fB\s-1CG_PARAMETERS_DO_NOT_MATCH_ERROR\s0\fR is generated if the parameters do not have
the same type or the topologies do not match.
.PP
\&\fB\s-1CG_ARRAY_TYPES_DO_NOT_MATCH_ERROR\s0\fR is generated if the type of two arrays
being connected do not match.
.PP
\&\fB\s-1CG_ARRAY_DIMENSIONS_DO_NOT_MATCH_ERROR\s0\fR is generated if the dimensions of
two arrays being connected do not match.
.SH "HISTORY"
.IX Header "HISTORY"
\&\fBcgConnectParameter\fR was introduced in Cg 1.2.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
cgGetConnectedParameter,
cgGetConnectedToParameter,
cgDisconnectParameter

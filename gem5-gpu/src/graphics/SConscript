# -*- mode:python -*-

Import('*')

import os
mesa_root = os.environ['GPGPUSIM_MESA_ROOT']

mesa_dir = "/mesa"
libpath = mesa_root+mesa_dir+'/lib'
print "lib path", mesa_root+mesa_dir+'/lib'
env.Replace(LIBPATH = [mesa_root+mesa_dir+'/lib', env['LIBPATH']])

#mesa_dir = "/Mesa-7.11.2_GPGPU-Sim"
#env.Replace(LIBPATH = [mesa_root+mesa_dir+'/lib64', env['LIBPATH']])

env.Append(CXXFLAGS = [
		     '-I'+mesa_root+'/gem5-gpu/src',
		     '-I'+mesa_root+mesa_dir+'/include',
		     '-I'+mesa_root+mesa_dir+'/src',
		     '-I'+mesa_root+mesa_dir+'/src/mesa',
		     '-I'+mesa_root+mesa_dir+'/src/mapi',
		     '-I'+mesa_root+mesa_dir+'/src/mesa/swrast',
		     '-I'+mesa_root+mesa_dir+'/src/gallium/auxiliary',
		     '-I'+mesa_root+mesa_dir+'/src/gallium/include',
		     '-I'+mesa_root+mesa_dir+'/src/gallium/drivers/softpipe',
 		     '-D_POSIX_SOURCE', '-D_SVID_SOURCE', '-D_BSD_SOURCE',
           	     '-D_GNU_SOURCE', '-DPTHREADS', '-DUSE_XSHM', '-DHAVE_POSIX_MEMALIGN',
           	     '-DHAVE_PTHREAD', '-D__STDC_VERSION__=0',
		     '-Wno-invalid-offsetof',
           ])

env.Append(LIBS = ['swrast_dri'])

print "GPGPUSIM_MESA_ROOT: " , mesa_root

SimObject('ZUnit.py')

Source('fixed_pipeline.cc', Werror=False)
Source('gem5_graphics_calls.cc')
Source('graphicsStream.cc')
Source('graphics_syscall_helper.cc')
Source('serialize_graphics.cc', Werror=False)
Source('gpgpusim_to_graphics_calls.cc')
Source('mesa_calls.cc', Werror=False)
Source('mesa_gpgpusim.cc', Werror=False)
Source('zunit.cc')

Source('emugl/opengles.cpp')
Source('emugl/android/utils/dll.c')

DebugFlag("GraphicsCalls")
DebugFlag('MesaGpgpusim')
DebugFlag('ZUnit')
